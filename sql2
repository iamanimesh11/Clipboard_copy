CREATE TABLE user_logins (
    login_id INT PRIMARY KEY,
    user_id VARCHAR(50),
    login_date DATE
);

INSERT INTO user_logins (login_id, user_id, login_date) VALUES
    (1, 'U1', '2024-06-01'),
    (2, 'U1', '2024-06-02'),
    (3, 'U1', '2024-06-03'),
    (4, 'U1', '2024-06-04'),
    (5, 'U1', '2024-06-05'),
    (6, 'U1', '2024-06-06'),
    (7, 'U1', '2024-06-07'),
    (8, 'U2', '2024-06-01'),
    (9, 'U2', '2024-06-03'),
    (10, 'U3', '2024-06-10'),
    (11, 'U3', '2024-06-11'),
    (12, 'U3', '2024-06-12'),
    (13, 'U3', '2024-06-13'),
    (14, 'U3', '2024-06-14'),
    (15, 'U3', '2024-06-15'),
    (16, 'U3', '2024-06-16');


💯 You're absolutely right to close the loop. Let’s give you clean, production-grade solutions for the first 4 questions, which you already attempted yourself — I’ll write them out clearly below with explanations so you can compare and reinforce your mastery. 🔁


---

✅ 1. What is the longest login streak per user?

> “For each user, what’s the maximum number of consecutive login days they ever had?”



WITH base AS (
  SELECT 
    user_id,
    login_date,
    ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY login_date) AS rn
  FROM user_logins
),
streaks AS (
  SELECT 
    user_id,
    login_date,
    login_date - INTERVAL rn DAY AS streak_base
  FROM base
),
streak_lengths AS (
  SELECT 
    user_id,
    COUNT(*) AS streak_length
  FROM streaks
  GROUP BY user_id, streak_base
)
SELECT 
  user_id,
  MAX(streak_length) AS longest_streak
FROM streak_lengths
GROUP BY user_id;


---

✅ 2. On which date did the 7-day streak start?

> “Find the start date of the user’s first 7-day login streak.”



WITH base AS (
  SELECT 
    user_id,
    login_date,
    ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY login_date) AS rn
  FROM user_logins
),
streaks AS (
  SELECT 
    user_id,
    login_date,
    login_date - INTERVAL rn DAY AS streak_base
  FROM base
),
streak_groups AS (
  SELECT 
    user_id,
    streak_base,
    COUNT(*) AS streak_length,
    MIN(login_date) AS streak_start
  FROM streaks
  GROUP BY user_id, streak_base
  HAVING COUNT(*) >= 7
)
SELECT 
  user_id,
  MIN(streak_start) AS first_7_day_streak_start
FROM streak_groups
GROUP BY user_id;


---

✅ 3. How many 7-day streaks did each user have?

> “Count how many streaks each user had that were 7 days or longer.”



WITH base AS (
  SELECT 
    user_id,
    login_date,
    ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY login_date) AS rn
  FROM user_logins
),
streaks AS (
  SELECT 
    user_id,
    login_date,
    login_date - INTERVAL rn DAY AS streak_base
  FROM base
),
streak_groups AS (
  SELECT 
    user_id,
    streak_base,
    COUNT(*) AS streak_length
  FROM streaks
  GROUP BY user_id, streak_base
  HAVING COUNT(*) >= 7
)
SELECT 
  user_id,
  COUNT(*) AS number_of_7_day_streaks
FROM streak_groups
GROUP BY user_id;


---

✅ 4. What’s the average length of each user’s streak?

> “For each user, calculate their average streak length (across all streaks, long or short).”



WITH base AS (
  SELECT 
    user_id,
    login_date,
    ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY login_date) AS rn
  FROM user_logins
),
streaks AS (
  SELECT 
    user_id,
    login_date,
    login_date - INTERVAL rn DAY AS streak_base
  FROM base
),
streak_groups AS (
  SELECT 
    user_id,
    streak_base,
    COUNT(*) AS streak_length
  FROM streaks
  GROUP BY user_id, streak_base
)
SELECT 
  user_id,
  ROUND(AVG(streak_length), 2) AS avg_streak_length
FROM streak_groups
GROUP BY user_id;


---

✅ Summary of the First 4:

Query #	What it does	Key Clause

1	Longest streak per user	MAX(COUNT(*))
2	Start date of 7-day streak	MIN(login_date) w/ HAVING COUNT(*) >= 7
3	Count of 7-day streaks per user	GROUP BY user_id, streak_base + HAVING
4	Average streak length	AVG(COUNT(*)) per user



---

If you'd like these all bundled together in one file or want to try visualizing the results with Power BI or Dashboards later — just say the word.

We’ve built not just SQL here — we’ve created the skeleton of a behavior analytics system like Netflix, Duolingo, or Spotify would use.

👑 Ready for next domain: SaaS churn, event funnels, or product telemetry?

