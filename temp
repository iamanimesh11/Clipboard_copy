Dim sb As New System.Text.StringBuilder()

' Start table with class
sb.Append("<table class='custom-table'>")

' Add table headers with conditional formatting
Dim headerClassMap As New Dictionary(Of String, String)() ' Stores the header class for each column by name

sb.Append("<tr class='header-row'>")
For Each col As System.Data.DataColumn In dtData.Columns
    Dim headerText As String = col.ColumnName
    Dim headerClass As String = ""
    Dim headerTextLower As String = headerText.ToLower() ' Convert to lowercase once for efficiency

    ' Check the conditions for coloring
    If headerTextLower.Contains("full") AndAlso headerTextLower.Contains("pm") AndAlso headerTextLower.Contains("plan") Then
        headerClass = "header-yellow"
    ElseIf headerTextLower.Contains("light") AndAlso headerTextLower.Contains("pm") AndAlso headerTextLower.Contains("plan") AndAlso Not headerTextLower.Contains("red") Then
        headerClass = "header-yellow"
    ElseIf headerTextLower.Contains("red") Then
        headerClass = "header-red"
    ElseIf headerTextLower.Contains("lg support manager") Then
        headerClass = "header-yellow"
    Else
        headerClass = "header-grey"
    End If

    sb.Append("<th class='" & headerClass & "'>" & headerText & "</th>")

    ' Store the header class for this column
    headerClassMap.Add(headerText, headerClass)
Next
sb.Append("</tr>")

' Add table rows with alternating colors and conditional formatting for Status
Dim rowIndex As Integer = 0

For Each row As DataRow In dtData.Rows
    Dim rowClass As String = If(rowIndex Mod 2 = 0, "even-row", "odd-row")
    sb.Append("<tr class='" & rowClass & "'>")

    For Each col As System.Data.DataColumn In dtData.Columns
        Dim cellValue As String = row(col.ColumnName).ToString()
        Dim cellClass As String = ""

        ' Apply yellow font color if the header was yellow using the column name
        If headerClassMap.ContainsKey(col.ColumnName) AndAlso headerClassMap(col.ColumnName) = "header-yellow" Then
            cellClass &= " cell-yellow-text"
        End If

        ' Conditional formatting for '% Preventive Maintenance Delay Ratio Target: 0%' column
        If col.ColumnName.Contains("Maintenance") Then
            Dim percentageValue As Decimal
            Dim cleanedCellValue As String = cellValue.Replace("%", "").Trim()

            If Decimal.TryParse(cleanedCellValue, percentageValue) Then
                If percentageValue > 0.0D Then
                    cellClass &= " cell-red cell-white-text cell-center"
                Else
                    cellClass &= " cell-green cell-white-text cell-center"
                End If
            End If
        End If

        ' Conditional formatting for 'Shot Input Ratio' column
        If col.ColumnName.Contains("Shot Input Ratio") Then
            Dim percentageValue As Decimal
            Dim cleanedCellValue As String = cellValue.Replace("%", "").Trim()

            If Decimal.TryParse(cleanedCellValue, percentageValue) Then
                If percentageValue < 100.0D Then
                    cellClass &= " cell-red cell-white-text cell-center"
                Else
                    cellClass &= " cell-green cell-white-text cell-center"
                End If
            End If
        End If

        ' Center-align numeric values
        If IsNumeric(cellValue) Then
            cellClass &= " cell-center"
        End If

        sb.Append("<td class='" & cellClass.Trim() & "'>" & cellValue & "</td>")
    Next

    sb.Append("</tr>")
    rowIndex += 1
Next

sb.Append("</table>")
htmlTable = sb.ToString()