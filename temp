let map;
let marker;
let currentLocation = { lat: 0, lng: 0 };
let routeLayer;

// Initialize Map
function initMap() {
    map = L.map("map").setView([0, 0], 13);

    // Add OpenStreetMap tiles
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        maxZoom: 19,
    }).addTo(map);

    // Add a marker for the technician's location
    marker = L.marker([0, 0]).addTo(map).bindPopup("Technician Location");
}

// Track Technician's Real-Time Location
function trackLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.watchPosition(
            (position) => {
                currentLocation.lat = position.coords.latitude;
                currentLocation.lng = position.coords.longitude;

                // Update marker and map view
                marker.setLatLng([currentLocation.lat, currentLocation.lng]).update();
                map.setView([currentLocation.lat, currentLocation.lng], 15);
            },
            (error) => {
                console.error("Error getting location:", error);
            },
            { enableHighAccuracy: true }
        );
    } else {
        alert("Geolocation not supported by your browser.");
    }
}

// Calculate and Display Route
async function calculateRoute() {
    const destination = document.getElementById("destinationInput").value;

    if (!destination) {
        alert("Please enter a destination.");
        return;
    }

    // Convert destination to coordinates using OpenRouteService's Geocoding API
    const geocodeUrl = `https://api.openrouteservice.org/geocode/search?api_key=YOUR_API_KEY&text=${encodeURIComponent(
        destination
    )}`;
    const geocodeResponse = await fetch(geocodeUrl);
    const geocodeData = await geocodeResponse.json();
    const destCoords = geocodeData.features[0]?.geometry.coordinates;

    if (!destCoords) {
        alert("Failed to find destination coordinates. Please try again.");
        return;
    }

    // Calculate route using OpenRouteService's Directions API
    const routeUrl = `https://api.openrouteservice.org/v2/directions/driving-car?api_key=YOUR_API_KEY`;
    const body = {
        coordinates: [
            [currentLocation.lng, currentLocation.lat],
            destCoords,
        ],
    };

    const routeResponse = await fetch(routeUrl, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
    });
    const routeData = await routeResponse.json();
    const coordinates = routeData.features[0].geometry.coordinates;

    // Display route on map
    if (routeLayer) {
        map.removeLayer(routeLayer);
    }
    routeLayer = L.polyline(
        coordinates.map((coord) => [coord[1], coord[0]]),
        { color: "blue" }
    ).addTo(map);
}

// Initialize the map and start tracking
initMap();
trackLocation();