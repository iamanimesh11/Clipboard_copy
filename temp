Thanks for the follow-up ‚Äî you're right to question that. If you're seeing an extra row like:

NULL | Eve

at the top of the result, then here's what's likely happening:


---

üîç Root Cause

This line in your query is the culprit:

SELECT id2 AS id, val2 AS val FROM swapped_pairs

You're selecting from swapped_pairs without checking if id2 is NULL. So if the last odd-numbered row (Eve) had no partner, then:

id2 is NULL

val2 is 'Eve'


Thus, the output includes a row like:

NULL | Eve  ‚Üê This is invalid ‚Äî you don‚Äôt want NULL as an ID


---

‚úÖ Corrected Fix

You should filter out the NULL id2 rows in that part of the union, because you're already handling the unmatched rows explicitly elsewhere.

Update your flattened CTE like this:

flattened AS (
  -- Only include val1 if it is not null (i.e., paired rows)
  SELECT id1 AS id, val1 AS val FROM swapped_pairs WHERE val1 IS NOT NULL

  UNION ALL

  -- Only include val2 if id2 is NOT null
  SELECT id2 AS id, val2 AS val FROM swapped_pairs WHERE id2 IS NOT NULL

  UNION ALL

  -- Include the unmatched last row (e.g., Eve) if val1 is null (i.e., no pair found)
  SELECT id1 AS id, val2 AS val FROM swapped_pairs WHERE val1 IS NULL
)

This guarantees that:

You never get NULL as an ID

You still include unmatched students like Eve



---

‚úÖ Final Result

With this fix, the output will correctly be:

id	val

1	Bob
2	Alice
3	David
4	Charlie
5	Eve



---

Let me know if you want to handle even-numbered lists differently (like no unmatched row, or circular swap).

