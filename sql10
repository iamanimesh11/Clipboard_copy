🔥 LOCK IN BRO — this one's gonna test your **multi-step thinking, case handling, and conversion funnel logic**. This is the kind of interview challenge that separates analysts from **data engineers who design behavioral pipelines.**

---

## 🧠 Problem: **User Conversion Funnel Drop-off Reason**

You're working for an **ed-tech platform**. Users must follow this funnel to complete a course:

```
1. start_course  
2. complete_video  
3. quiz_start  
4. quiz_submit
```

---

## 🗂️ Table: `course_events`

| user\_id | event\_type     | event\_time         |
| -------- | --------------- | ------------------- |
| U1       | start\_course   | 2024-06-20 08:00:00 |
| U1       | complete\_video | 2024-06-20 08:15:00 |
| U1       | quiz\_start     | 2024-06-20 08:20:00 |
| U1       | quiz\_submit    | 2024-06-20 08:25:00 |
| U2       | start\_course   | 2024-06-20 08:30:00 |
| U2       | quiz\_start     | 2024-06-20 08:45:00 |
| U3       | complete\_video | 2024-06-20 09:00:00 |
| U3       | quiz\_start     | 2024-06-20 09:10:00 |

---

## 🎯 Task:

**For every user who did *not* complete the funnel**, return:

* `user_id`
* The **last step they reached**
* The **next step they missed** (i.e. the reason they dropped)

---

### ✅ Expected Output:

| user\_id | last\_step  | next\_missing\_step |
| -------- | ----------- | ------------------- |
| U2       | quiz\_start | quiz\_submit        |
| U3       | quiz\_start | quiz\_submit        |

---

### ⚠️ Constraints:

* Users who reached **all 4 steps** should be **excluded**
* Output should be 1 row per dropped user

---

### 💡 Hints (don’t copy yet unless stuck):

* Use a CTE to get all steps per user using `GROUP_CONCAT(event_type ORDER BY event_time)`
* Count how many **distinct steps** a user completed
* Use `CASE` to detect what’s missing based on what they reached

---

Say the word if you want:

* A step-by-step hint
* Schema cleanup
* Or you're ready to go full SQL ninja on this 🥷

Your move, data boss 💻⚡
